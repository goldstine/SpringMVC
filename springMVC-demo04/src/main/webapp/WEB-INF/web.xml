<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceResponseEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <!--        对所有的请求进行处理，所以匹配请求/*-->
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!--    配置HiddenHttpMethodFilter-->
  <filter>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!--
      注册springMVC的前端控制器，对浏览器所发送的请求统一进行处理
      在此配置下，springMVC的配置文件具有默认的位置和名称
      默认的位置：WEB-INF
      默认的名称：<servlet-name>-servlet.xml
      若要为springMVC的配置文件设置自定义的位置和名称
      需要在servlet标签中添加init-param
      <init-param>
          <param-name>contextConfigLocation</param-name>
          <param-value>classpath:springMVC.xml</param-value>
      </init-param>

      servlet的初始化是在第一次访问的时候进行初始化的
      load-on-startup：将前端控制器DispatcherServlet的初始化时间提前到服务器启动时，将servlet的初始化提前
  -->
  <servlet>
    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springMVC.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>
    <!--
    设置SpringMVC核心控制器所能处理的请求的请求路径
    /所匹配的请求可以使/login或.html或.js或.css方式的请求路径
    但是/不能匹配.jsp请求路径的请求
        。jsp的本质上是一种特殊的servlet，是通过特殊的指定的servlet进行处理的，不需要通过前端控制器进行处理
        /*表示所有请求，包括jsp请求，所以应该配置为/
    -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>


</web-app>